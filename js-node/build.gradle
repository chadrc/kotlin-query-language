buildscript {
    ext.kotlin_version = '1.2.50'
    ext.nodeVersion = '8.9.4'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}

group 'com.chadrc.experiments'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin-platform-js'
apply plugin: 'com.moowork.node'

repositories {
    mavenCentral()
}

dependencies {
    expectedBy project(":common")

    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"

    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
}

[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions {
        sourceMap = true
        sourceMapEmbedSources = "always"
        moduleKind = 'commonjs'
    }
}

task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

node {
    version = nodeVersion
    download = true
}

task installMocha(type: NpmTask) {
    args = ['install', 'mocha']
}

task runMocha(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules, installMocha]) {
    script = file('node_modules/mocha/bin/mocha')
    args = [compileTestKotlin2Js.outputFile]
}

test.dependsOn runMocha

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.kotlin
}

artifacts {
    archives sourcesJar
}
